<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>后端 - Category - Alen</title>
        <link>http://example.org/categories/%E5%90%8E%E7%AB%AF/</link>
        <description>后端 - Category - Alen</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>anjinc188@gmail.com (Alen)</managingEditor>
            <webMaster>anjinc188@gmail.com (Alen)</webMaster><lastBuildDate>Thu, 08 Oct 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/categories/%E5%90%8E%E7%AB%AF/" rel="self" type="application/rss+xml" /><item>
    <title>Go Gorm关联查询排除字段</title>
    <link>http://example.org/posts/go-gorm%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E6%8E%92%E9%99%A4%E5%AD%97%E6%AE%B5/</link>
    <pubDate>Thu, 08 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/go-gorm%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E6%8E%92%E9%99%A4%E5%AD%97%E6%AE%B5/</guid>
    <description><![CDATA[本章讲解关于gorm模型后如何筛选按需字段 安装gorm go get -u github.com/jinzhu/gorm 一对多使用： //日记模型 type Diary struct { Model Uid uint32 `json:&#34;uid&#34;` //用户ID Content string `json:&#34;content&#34;` //日记内容 DiaryImg []DiaryImg `gorm:&#34;ForeignKey:diary_id;AssociationForeignKey:id&#34; json:&#34;diary_img&#34;`]]></description>
</item>
<item>
    <title>Go Query采集文章</title>
    <link>http://example.org/posts/go-query%E9%87%87%E9%9B%86%E6%96%87%E7%AB%A0/</link>
    <pubDate>Tue, 04 Aug 2020 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/go-query%E9%87%87%E9%9B%86%E6%96%87%E7%AB%A0/</guid>
    <description><![CDATA[相信很多小伙伴对爬虫有着很大的兴趣,我们今天来说下go语言的爬虫利器goquery，语法有jquery类似，我有一篇使用php-QueryL]]></description>
</item>
<item>
    <title>Php Jwt中间件 用户鉴权</title>
    <link>http://example.org/posts/php-jwt%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%94%A8%E6%88%B7%E9%89%B4%E6%9D%83/</link>
    <pubDate>Wed, 10 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/php-jwt%E4%B8%AD%E9%97%B4%E4%BB%B6-%E7%94%A8%E6%88%B7%E9%89%B4%E6%9D%83/</guid>
    <description><![CDATA[在上一篇文章中大概对jwt有了一个大概的了解，现在我们用tp6配合jwt做一个中间件，实现对用户签发token还有鉴权 签发token 直接开始]]></description>
</item>
<item>
    <title>Tp6&#43;Jwt用户token验证</title>
    <link>http://example.org/posts/tp6&#43;jwt%E7%94%A8%E6%88%B7token%E9%AA%8C%E8%AF%81/</link>
    <pubDate>Thu, 04 Jun 2020 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/tp6&#43;jwt%E7%94%A8%E6%88%B7token%E9%AA%8C%E8%AF%81/</guid>
    <description><![CDATA[JSON Web Token是什么？ 转载：https://www.liqingbo.cn/docs/jwt/ JSON Web Token (JWT)是一个开放标准(RFC 7519]]></description>
</item>
<item>
    <title>ElasticSearch 和 Kibana网盘下载</title>
    <link>http://example.org/posts/elasticsearch-%E5%92%8C-kibana%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD/</link>
    <pubDate>Fri, 03 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/elasticsearch-%E5%92%8C-kibana%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD/</guid>
    <description><![CDATA[我们通常在官网download会很慢 因为在墙内需要挂代理，这里贴出一份百度网盘下载 elasticsearch-7.6.0-windows-x86_64 下载地址 提取码：6f7s kibana-7.6.0-windows-x86_64 下载地址 提取码：v8w1 希望可]]></description>
</item>
<item>
    <title>php QueryList采集微信公众号文章</title>
    <link>http://example.org/posts/php-querylist%E9%87%87%E9%9B%86%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/</link>
    <pubDate>Wed, 04 Dec 2019 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/php-querylist%E9%87%87%E9%9B%86%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0/</guid>
    <description><![CDATA[QueryList 是什么 QueryList是一套用于内容采集的PHP工具，它使用更加现代化的开发思想，语法简洁、优雅，可扩展性强。相比传统的使用晦涩的正则表]]></description>
</item>
</channel>
</rss>
