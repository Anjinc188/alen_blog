<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Alen</title>
        <link>http://example.org/</link>
        <description>Make it a better place</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>anjinc188@gmail.com (Alen)</managingEditor>
            <webMaster>anjinc188@gmail.com (Alen)</webMaster><lastBuildDate>Fri, 23 Sep 2022 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>设计模式(02)-工厂模式</title>
    <link>http://example.org/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F02-%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
    <pubDate>Fri, 23 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F02-%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
    <description><![CDATA[简单工厂模式 首先来看，如果没有工厂模式，在开发者创建一个类的对象时，如果有很多不同种类的对象将会如何实现，代码如下： package main import &#34;fmt&#34; //水果类 type Fruit struct]]></description>
</item>
<item>
    <title>设计模式(01)-面向对象设计原则</title>
    <link>http://example.org/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F01-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link>
    <pubDate>Thu, 22 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F01-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid>
    <description><![CDATA[对于面向对象软件系统的设计而言，在支持可维护性的同时，提高系统的可复用性是一个至关重要的问题，如何同时提高一个软件系统的可维护性和可复用性是]]></description>
</item>
<item>
    <title>数据结构算法-栈和队列</title>
    <link>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</link>
    <pubDate>Wed, 22 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[用栈实现队列 题目链接 解题思路：双栈，将一个栈当作输入栈，用于压入push 传入的数据；另一个栈当作输出栈，用于 pop 和 peek 操作。每次 pop 或 peek 时，若输出]]></description>
</item>
<item>
    <title>数据结构算法 二叉树学习篇</title>
    <link>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%AD%A6%E4%B9%A0%E7%AF%87/</link>
    <pubDate>Mon, 20 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%AD%A6%E4%B9%A0%E7%AF%87/</guid>
    <description><![CDATA[前序遍历 题目链接 解题思路：前序遍历：中左右、使用递归法遍历 定义 (root) 表示当前遍历到 root 节点的答案。按照定义，我们只要递归调用 (root-&gt;left) 来遍历 root 节点的左子树]]></description>
</item>
<item>
    <title>数据结构算法 二叉树理论篇</title>
    <link>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA/</link>
    <pubDate>Wed, 15 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA/</guid>
    <description><![CDATA[文章出自代码随想录，很良心的一个网站平台。 二叉树的种类 满二叉树 满二叉树：如果一棵二叉树只有度为0的结点和度为2的结点，并且度为0的结点在同一]]></description>
</item>
<item>
    <title>数据结构算法 链表学习篇</title>
    <link>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E9%93%BE%E8%A1%A8%E5%AD%A6%E4%B9%A0%E7%AF%87/</link>
    <pubDate>Mon, 06 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E9%93%BE%E8%A1%A8%E5%AD%A6%E4%B9%A0%E7%AF%87/</guid>
    <description><![CDATA[移除链表元素 题目链接 解题思路：使用虚拟头节点遍历，找到对应的val值，把所需要删除的值指向Next.Next即可。 代码示例： /** * Definition for singly-linked list. * type]]></description>
</item>
<item>
    <title>vue实现PayPal</title>
    <link>http://example.org/posts/vue%E5%AE%9E%E7%8E%B0paypal%E6%94%AF%E4%BB%98/</link>
    <pubDate>Sun, 08 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/vue%E5%AE%9E%E7%8E%B0paypal%E6%94%AF%E4%BB%98/</guid>
    <description><![CDATA[PayPal我使用的是官方封装继承的集成 PayPal官网有一个内部封装得流程，用户点击按钮触发创建订单事件，然后监听用户成功的回调，把订单I]]></description>
</item>
<item>
    <title>数据结构算法 字符串学习篇</title>
    <link>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%A6%E4%B9%A0%E7%AF%87/</link>
    <pubDate>Fri, 08 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%A6%E4%B9%A0%E7%AF%87/</guid>
    <description><![CDATA[题目练习 反转字符串 题目链接 解题思路：使用双指针left right 互换位置，当left&lt;=right时候循环条件结束 代码示例： // 反转字符串 func reverseString(s []byte)]]></description>
</item>
<item>
    <title>数据结构算法 哈希表学习篇</title>
    <link>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E5%93%88%E5%B8%8C%E8%A1%A8%E5%AD%A6%E4%B9%A0%E7%AF%87/</link>
    <pubDate>Tue, 05 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E5%93%88%E5%B8%8C%E8%A1%A8%E5%AD%A6%E4%B9%A0%E7%AF%87/</guid>
    <description><![CDATA[题目练习 有效的字母异位词 题目链接 解题思路：定义一个数组叫做record用来上记录字符串s里字符出现的次数。 需要把字符映射到数组也就是哈希表的]]></description>
</item>
<item>
    <title>数据结构算法 数组学习篇</title>
    <link>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E6%95%B0%E7%BB%84%E5%AD%A6%E4%B9%A0%E7%AF%87/</link>
    <pubDate>Mon, 04 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95-%E6%95%B0%E7%BB%84%E5%AD%A6%E4%B9%A0%E7%AF%87/</guid>
    <description><![CDATA[数组理论基础 数组是非常基础的数据结构，在面试中，考察数组的题目一般在思维上都不难，主要是考察对代码的掌控能力 也就是说，想法很简单，但实现起来]]></description>
</item>
</channel>
</rss>
