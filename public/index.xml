<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Alen</title>
        <link>http://example.org/</link>
        <description>Make it a better place</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>anjinc188@gmail.com (Alen)</managingEditor>
            <webMaster>anjinc188@gmail.com (Alen)</webMaster><lastBuildDate>Wed, 11 Aug 2021 23:55:25 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>有效的括号</title>
    <link>http://example.org/posts/%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</link>
    <pubDate>Wed, 11 Aug 2021 23:55:25 &#43;0800</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</guid>
    <description><![CDATA[题目 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。 有效字符串需满足： 左括号必须用相同类型的右括]]></description>
</item>
<item>
    <title>斐波那契数列</title>
    <link>http://example.org/posts/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</link>
    <pubDate>Wed, 11 Aug 2021 23:10:22 &#43;0800</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</guid>
    <description><![CDATA[前提 有这么一组数字 1, 1, 2, 3, 5, 8, 13, 21 如果你仔细看～可以发现它的规律 21 = 13 + 8 13 = 8 + 5 8 = 5 + 3 5 = 3 + 2 这是斐波那契数列，第n项 = n-1项 +]]></description>
</item>
<item>
    <title>排序算法学习记录</title>
    <link>http://example.org/posts/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Wed, 28 Jul 2021 12:40:39 &#43;0800</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[1. 冒泡排序 冒泡排序（Bubble Sort）也是一种简单直观的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他]]></description>
</item>
<item>
    <title>Html语义化标签的理解</title>
    <link>http://example.org/posts/html%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE%E7%9A%84%E7%90%86%E8%A7%A3/</link>
    <pubDate>Sat, 03 Jul 2021 14:59:06 &#43;0800</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/html%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE%E7%9A%84%E7%90%86%E8%A7%A3/</guid>
    <description><![CDATA[HTML语义化是什么？ 语义化是指根据内容的结构化（内容语义化），选择合适的标签（代码语义化），便于开发者阅读和写出更优雅的代码的同时，让浏览]]></description>
</item>
<item>
    <title>call,apply,bind区别</title>
    <link>http://example.org/posts/callapplymbind%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Thu, 01 Jul 2021 23:23:25 &#43;0800</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/callapplymbind%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[首先说下前两者的区别。 call 和 apply 都是为了解决改变 this 的指向。作用都是相同的，只是传参的方式不同。 除了第一个参数外，call 可以接收一个参数列表，a]]></description>
</item>
<item>
    <title>JS基础 函数、对象和原型、原型链的关系</title>
    <link>http://example.org/posts/js%E5%9F%BA%E7%A1%80-%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%8E%9F%E5%9E%8B%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%9A%84%E5%85%B3%E7%B3%BB/</link>
    <pubDate>Tue, 29 Jun 2021 16:51:01 &#43;0800</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/js%E5%9F%BA%E7%A1%80-%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%8E%9F%E5%9E%8B%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%9A%84%E5%85%B3%E7%B3%BB/</guid>
    <description><![CDATA[再次学习JS-函数、对象和原型、原型链的关系 JS的原型、原型链一直是比较难理解的内容，不少初学者甚至有一定经验的老鸟都不一定能完全说清楚，更]]></description>
</item>
<item>
    <title>Cookie, LocalStorage 与 SessionStorage的区别</title>
    <link>http://example.org/posts/cookie-localstorage-%E4%B8%8E-sessionstorage%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Tue, 29 Jun 2021 16:19:36 &#43;0800</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/cookie-localstorage-%E4%B8%8E-sessionstorage%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[最近找工作面试中，有频繁被面试官问到Cookie, LocalStorage 与 SessionStorage的区别，在此记录一下。 基本概念 Cookie Cookie 是小甜饼的意思。顾名思义]]></description>
</item>
<item>
    <title>ES6构造函数class与ES5构造函数语法</title>
    <link>http://example.org/posts/es6%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0class%E4%B8%8Ees5%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E8%AF%AD%E6%B3%95/</link>
    <pubDate>Mon, 09 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/es6%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0class%E4%B8%8Ees5%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E8%AF%AD%E6%B3%95/</guid>
    <description><![CDATA[ES5的构造函数语法 1.创建对象的方法有两种 //字面量 const obj = {} //构造函数 const obj = new Object() 构造函数就是JavaScript程序定义好的构造函数,我]]></description>
</item>
<item>
    <title>Go Gorm关联查询排除字段</title>
    <link>http://example.org/posts/go-gorm%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E6%8E%92%E9%99%A4%E5%AD%97%E6%AE%B5/</link>
    <pubDate>Thu, 08 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/go-gorm%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E6%8E%92%E9%99%A4%E5%AD%97%E6%AE%B5/</guid>
    <description><![CDATA[本章讲解关于gorm模型后如何筛选按需字段 安装gorm go get -u github.com/jinzhu/gorm 一对多使用： //日记模型 type Diary struct { Model Uid uint32 `json:&#34;uid&#34;` //用户ID Content string `json:&#34;content&#34;` //日记内容 DiaryImg []DiaryImg `gorm:&#34;ForeignKey:diary_id;AssociationForeignKey:id&#34; json:&#34;diary_img&#34;`]]></description>
</item>
<item>
    <title>Vue3</title>
    <link>http://example.org/posts/vue3.0&#43;typescript%E4%BD%93%E9%AA%8C/</link>
    <pubDate>Sun, 04 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>Alen</author>
    <guid>http://example.org/posts/vue3.0&#43;typescript%E4%BD%93%E9%AA%8C/</guid>
    <description><![CDATA[Vue3.0 可以完全支持Vue2.0, 升级以后不需要更改关于Vue的代码 vue3.0创建项目 -- 使用vite npm init vite-app 你的项目名 cd 项目名 npm run dev 当然也可以使用]]></description>
</item>
</channel>
</rss>
